stages:
  - tests
  - build
  - dev
  - staging
  - staging-deploy
  - prod
  - prod-deploy

build-dev: &build
  stage: build
  image: node:14
  before_script:
    - export NODE_CONFIG_ENV=development
    - cd packages/Web
  script:
    - 'echo "{\"tag\": \"$CI_COMMIT_TAG\", \"sha\": \"$CI_COMMIT_SHA\"}" > version.json'
    - 'echo "{\"status\": \"ok\"}" > healthz'
    - yarn install --frozen-lockfile
    - yarn run lint-js
    - yarn run lint-css

    # build bink theme
    - THEME=bink npm run build
    - cp version.json build/
    - cp healthz build/
    - tar -C build -zcvf ../../build-bink-$NODE_CONFIG_ENV.tar.gz .
    - rm -rf build

    # build wasabi theme
    - HEME=wasabi npm run build
    - cp version.json build/
    - cp healthz build/
    - tar -C build -zcvf ../../build-wasabi-$NODE_CONFIG_ENV.tar.gz .
    - rm -rf build

    # build fatface theme
    - THEME=fatface npm run build
    - cp version.json build/
    - cp healthz build/
    - tar -C build -zcvf ../../build-fatface-development.tar.gz .
    - rm -rf build
  artifacts:
    paths:
      - build*.tar.gz
    expire_in: 1 week
  only:  # "only" defaults to not include MRs
    - develop

deploy-dev: &deploy
  stage: dev
  image: ghcr.io/binkhq/copy2blobstorage:latest
  script:
    # deploy bink theme
    - export CONNECTION_STRING=$DEV_BINK
    - mkdir bink
    - tar -C bink -xf build-bink-development.tar.gz
    - copy --sync bink /

    # deploy wasabi theme
    - export CONNECTION_STRING=$DEV_WASABI
    - mkdir wasabi
    - tar -C wasabi -xf build-wasabi-development.tar.gz
    - copy --sync wasabi /

    # deploy fatface theme
    - export CONNECTION_STRING=$DEV_FATFACE
    - mkdir fatface
    - tar -C fatface -xf build-fatface-development.tar.gz
    - copy --sync fatface /
  only:
    - develop

test-mr:
  stage: tests
  image: node:14
  before_script:
    - cd packages/Web
  script:
    - yarn install --frozen-lockfile
    - yarn run lint-js
    - yarn run lint-css
  only:
    - merge_requests

build-staging:
  <<: *build
  stage: staging
  allow_failure: false
  before_script:
    - export NODE_CONFIG_ENV=staging
    - cd packages/Web
  artifacts:
    paths:
      - build*.tar.gz
    expire_in: 3 weeks
  only:
    - tags

deploy-staging-bink:
  stage: staging-deploy
  image: ghcr.io/binkhq/copy2blobstorage:latest
  script:
    # deploy bink theme
    - export CONNECTION_STRING=$STAGING_BINK
    - mkdir bink
    - tar -C bink -xf build-bink-staging.tar.gz
    - copy --sync bink /
  when: manual
  only:
    - tags

deploy-staging-wasabi:
  stage: staging-deploy
  image: ghcr.io/binkhq/copy2blobstorage:latest
  script:
    # deploy wasabi theme
    - export CONNECTION_STRING=$STAGING_WASABI
    - mkdir wasabi
    - tar -C wasabi -xf build-wasabi-staging.tar.gz
    - copy --sync wasabi /
  when: manual
  only:
    - tags

deploy-staging-fatface:
  stage: staging-deploy
  image: ghcr.io/binkhq/copy2blobstorage:latest
  script:
    # deploy fatface theme
    - export CONNECTION_STRING=$STAGING_FATFACE
    - mkdir fatface
    - tar -C fatface -xf build-fatface-staging.tar.gz
    - copy --sync fatface /
  when: manual
  only:
    - tags

build-prod:
  <<: *build
  stage: prod
  allow_failure: false
  before_script:
    - export NODE_CONFIG_ENV=production
    - cd packages/Web
  artifacts:
    paths:
      - build*.tar.gz
    expire_in: 3 weeks
  when: manual
  only:
    - tags

deploy-prod-bink:
  stage: prod-deploy
  image: ghcr.io/binkhq/copy2blobstorage:latest
  script:
    # deploy bink theme
    - export CONNECTION_STRING=$PROD_BINK
    - mkdir bink
    - tar -C bink -xf build-bink-production.tar.gz
    - copy --sync bink /
  when: manual
  only:
    - tags

deploy-prod-wasabi:
  stage: prod-deploy
  image: ghcr.io/binkhq/copy2blobstorage:latest
  script:
    # deploy wasabi theme
    - export CONNECTION_STRING=$PROD_WASABI
    - mkdir wasabi
    - tar -C wasabi -xf build-wasabi-production.tar.gz
    - copy --sync wasabi /
  when: manual
  only:
    - tags

deploy-prod-fatface:
  stage: prod-deploy
  image: ghcr.io/binkhq/copy2blobstorage:latest
  script:
    # deploy fatface theme
    - export CONNECTION_STRING=$PROD_FATFACE
    - mkdir fatface
    - tar -C fatface -xf build-fatface-production.tar.gz
    - copy --sync fatface /
  when: manual
  only:
    - tags
